---
- name: Install required packages and configure sysctl
  ansible.builtin.import_tasks:
    file: pre.yml

- name: Manage Docker user
  ansible.builtin.import_tasks:
    file: manage_user.yml

- name: Remove obsolete Docker instruction file
  ansible.builtin.file:
    path: "{{ ansible_facts.env.HOME }}/ROOTLESS_DOCKER.README"
    state: absent

- name: Rootful Docker block
  tags:
    - docker_rootful
  environment:
    XDG_RUNTIME_DIR: /run/user/{{ docker_user_info.uid }}
    PATH: "{{ docker_user_info.home }}/bin:{{ ansible_facts.env.PATH }}"
    DOCKER_HOST: unix:///run/user/{{ docker_user_info.uid }}/docker.sock
  when:
    - docker_rootful
    - not (ansible_facts.distribution == "Debian" and ansible_facts.distribution_major_version <= '10')
  block:
    - name: Install rootful Docker
      ansible.builtin.import_tasks:
        file: docker_install_rootful.yml

    - name: Configure rootful Docker service
      ansible.builtin.import_tasks:
        file: docker_service_rootful.yml

- name: Debian information
  ansible.builtin.fail:
    msg: slirp4netns (>= 0.4.0) is required, currently not available in Debian <= 10
  when:
    - docker_rootful
    - (ansible_facts.distribution == "Debian" and ansible_facts.distribution_major_version <= '10')

- name: Install and configure rootless Docker
  ansible.builtin.import_tasks:
    file: docker_install_rootless.yml
  when:
    - not docker_rootful | bool
  tags:
    - docker_rootless

- name: Configure Docker service
  ansible.builtin.import_tasks:
    file: docker_service.yml
  tags:
    - docker_rootful
    - docker_rootless

- name: Install Docker Compose
  ansible.builtin.import_tasks:
    file: docker_compose.yml
  when:
    - docker_compose
  tags:
    - docker_compose

- name: Add user sudo alias
  vars:
    sudo_alias: >
      alias docker='sudo XDG_RUNTIME_DIR="/run/user/{{ docker_user_info.uid }}"
      DOCKER_HOST="unix:///run/user/{{ docker_user_info.uid }}/docker.sock"
      {{ docker_user_info.home }}/bin/docker'
  when:
    - docker_add_alias | bool
    - not docker_rootful
  tags:
    - docker_rootful
    - docker_rootless
    - docker_compose
  block:
    - name: Stat .bashrc
      ansible.builtin.stat:
        path: "{{ ansible_facts.env.HOME }}/.bashrc"
      register: user_bashrc

    - name: Check if .bash_aliases is used
      ansible.builtin.command: grep -q '.bash_aliases' "{{ ansible_facts.env.HOME }}/.bashrc"
      register: check_aliases
      changed_when: check_aliases.rc >= 2
      failed_when: check_aliases.rc >= 2
      when:
        - user_bashrc.stat.exists

    - name: Add rootless Docker alias to .bash_aliases
      ansible.builtin.lineinfile:
        path: "{{ ansible_facts.env.HOME }}/.bash_aliases"
        line: "{{ sudo_alias }}"
        regexp: ^alias docker=
        state: present
        create: true
        mode: "0640"
      when:
        - check_aliases.rc == 0
        - user_bashrc.stat.exists and not docker_rootful

    - name: Add rootless Docker alias to .bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_facts.env.HOME }}/.bashrc"
        line: "{{ sudo_alias }}"
        regexp: ^alias docker=
      when:
        - user_bashrc.stat.exists
        - check_aliases.rc != 0
        - not docker_rootful

- name: Create docker_rootless.sh
  ansible.builtin.template:
    src: "{{ docker_rootless_script_template }}"
    dest: "{{ ansible_facts.env.HOME }}/docker_rootless.sh"
    mode: "0700"
  when:
    - docker_rootful
    - not docker_add_alias | bool
  tags:
    - docker_rootful

- name: Deploy bash completion
  ansible.builtin.import_tasks:
    file: bashrc.yml
  when:
    - docker_user_bashrc
  tags:
    - docker_rootful
    - docker_rootless
