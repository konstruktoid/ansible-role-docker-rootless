---
- name: Manage Docker systemd service
  become: true
  tags:
    - privileged
  when:
    - install_dependencies
  block:
    - name: Add Docker systemd service
      ansible.builtin.template:
        src: "{{ docker_rootful_service_template }}"
        dest: /etc/systemd/system/docker.service
        mode: "0644"
        owner: root
        group: root

    - name: Disable rootful Docker daemon
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        enabled: false
      loop:
        - docker.service
        - docker.socket
        - containerd.service
      when:
        - not docker_rootful_enabled
        - ansible_facts.virtualization_type not in ["container", "docker", "podman"]

    - name: Enable rootful Docker daemon
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - docker.service
        - docker.socket
        - containerd.service
      when:
        - docker_rootful_enabled
        - ansible_facts.virtualization_type not in ["container", "docker", "podman"]

    - name: Load the ip_tables module
      tags:
        - privileged
      community.general.modprobe:
        name: ip_tables
        state: present
      when:
        - ansible_facts.virtualization_type not in ["container", "docker", "podman"]

- name: Stat Docker user docker.sock
  become: true
  become_user: "{{ docker_user }}"
  ansible.builtin.stat:
    path: /run/user/{{ docker_user_info.uid }}/docker.sock
  register: docker_rootless_sock

- name: Install rootless Docker
  # https://github.com/docker/docker-install/pull/487
  become: true
  become_user: "{{ docker_user }}"
  environment:
    PATH: "{{ docker_user_info.home }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    XDG_RUNTIME_DIR: /run/user/{{ docker_user_info.uid }}
  ansible.builtin.command:
    cmd: "dockerd-rootless-setuptool.sh install {{ '--skip-iptables' if ansible_facts.distribution == 'AlmaLinux' else omit }}"
  register: install_rootless_docker
  changed_when: install_rootless_docker.rc != 0
  failed_when: install_rootless_docker.rc != 0
  when:
    - not docker_rootless_sock.stat.exists
